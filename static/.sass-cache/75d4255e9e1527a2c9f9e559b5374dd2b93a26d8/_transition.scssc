3.2.10 (Media Mark)
77c479240b27e28f77813fb2a5017cc40bf3e30c
o:Sass::Tree::RootNode
:@template"¤ @import "shared";

// CSS Transitions
// Currently only works in Webkit.
//
// * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
// * We'll be prepared.
//
// Including this submodule sets following defaults for the mixins:
//
//     $default-transition-property : all
//     $default-transition-duration : 1s
//     $default-transition-function : false
//     $default-transition-delay    : false
//
// Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s).

$default-transition-property: all !default;

$default-transition-duration: 1s !default;

$default-transition-function: false !default;

$default-transition-delay: false !default;

$transitionable-prefixed-values: transform, transform-origin !default;

// One or more properties to transition
//
// * for multiple, use a comma-delimited list
// * also accepts "all" or "none"

@mixin transition-property($property-1: $default-transition-property,
  $property-2 : false,
  $property-3 : false,
  $property-4 : false,
  $property-5 : false,
  $property-6 : false,
  $property-7 : false,
  $property-8 : false,
  $property-9 : false,
  $property-10: false
) {
  @if type-of($property-1) == string { $property-1: unquote($property-1); }
  $properties: compact($property-1, $property-2, $property-3, $property-4, $property-5, $property-6, $property-7, $property-8, $property-9, $property-10);
  @if $experimental-support-for-webkit    {       -webkit-transition-property : prefixed-for-transition(-webkit, $properties); }
  @if $experimental-support-for-mozilla   {          -moz-transition-property : prefixed-for-transition(-moz,    $properties); }
  @if $experimental-support-for-opera     {            -o-transition-property : prefixed-for-transition(-o,      $properties); }
                                                          transition-property : $properties;
}

// One or more durations in seconds
//
// * for multiple, use a comma-delimited list
// * these durations will affect the properties in the same list position

@mixin transition-duration($duration-1: $default-transition-duration,
  $duration-2 : false,
  $duration-3 : false,
  $duration-4 : false,
  $duration-5 : false,
  $duration-6 : false,
  $duration-7 : false,
  $duration-8 : false,
  $duration-9 : false,
  $duration-10: false
) {
  @if type-of($duration-1) == string { $duration-1: unquote($duration-1); }
  $durations: compact($duration-1, $duration-2, $duration-3, $duration-4, $duration-5, $duration-6, $duration-7, $duration-8, $duration-9, $duration-10);
  @include experimental(transition-duration, $durations,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more timing functions
//
// * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
// * For multiple, use a comma-delimited list
// * These functions will effect the properties in the same list position

@mixin transition-timing-function($function-1: $default-transition-function,
  $function-2 : false,
  $function-3 : false,
  $function-4 : false,
  $function-5 : false,
  $function-6 : false,
  $function-7 : false,
  $function-8 : false,
  $function-9 : false,
  $function-10: false
) {
  $function-1: unquote($function-1);
  $functions: compact($function-1, $function-2, $function-3, $function-4, $function-5, $function-6, $function-7, $function-8, $function-9, $function-10);
  @include experimental(transition-timing-function, $functions,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more transition-delays in seconds
//
// * for multiple, use a comma-delimited list
// * these delays will effect the properties in the same list position

@mixin transition-delay($delay-1: $default-transition-delay,
  $delay-2 : false,
  $delay-3 : false,
  $delay-4 : false,
  $delay-5 : false,
  $delay-6 : false,
  $delay-7 : false,
  $delay-8 : false,
  $delay-9 : false,
  $delay-10: false
) {
  @if type-of($delay-1) == string { $delay-1: unquote($delay-1); }
  $delays: compact($delay-1, $delay-2, $delay-3, $delay-4, $delay-5, $delay-6, $delay-7, $delay-8, $delay-9, $delay-10);
  @include experimental(transition-delay, $delays,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// Transition all-in-one shorthand

@mixin single-transition(
  $property: $default-transition-property,
  $duration: $default-transition-duration,
  $function: $default-transition-function,
  $delay: $default-transition-delay
) {
  @include transition(compact($property $duration $function $delay));
}

@mixin transition(
  $transition-1 : default,
  $transition-2 : false,
  $transition-3 : false,
  $transition-4 : false,
  $transition-5 : false,
  $transition-6 : false,
  $transition-7 : false,
  $transition-8 : false,
  $transition-9 : false,
  $transition-10: false
) {
  @if $transition-1 == default {
    $transition-1 : compact($default-transition-property $default-transition-duration $default-transition-function $default-transition-delay);
  }
  $transitions: false;
  @if type-of($transition-1) == list and type-of(nth($transition-1,1)) == list {
    $transitions: join($transition-1, compact($transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10), comma);
  } @else {
    $transitions : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);
  }
  $delays: comma-list();
  $has-delays: false;
  $webkit-value: comma-list();
  $moz-value: comma-list();
  $o-value: comma-list();

  // This block can be made considerably simpler at the point in time that
  // we no longer need to deal with the differences in how delays are treated.
  @each $transition in $transitions {
    // Extract the values from the list
    // (this would be cleaner if nth took a 3rd argument to provide a default value).
    $property: nth($transition, 1);
    $duration: false;
    $timing-function: false;
    $delay: false;
    @if length($transition) > 1 { $duration:        nth($transition, 2); }
    @if length($transition) > 2 { $timing-function: nth($transition, 3); }
    @if length($transition) > 3 { $delay:           nth($transition, 4); $has-delays: true; }

    // If a delay is provided without a timing function
    @if is-time($timing-function) and not $delay { $delay: $timing-function; $timing-function: false; $has-delays: true; }

    // Keep a list of delays in case one is specified
    $delays: append($delays, if($delay, $delay, 0s));

    $webkit-value: append($webkit-value, compact(prefixed-for-transition(-webkit, $property) $duration $timing-function));
       $moz-value: append(   $moz-value, compact(prefixed-for-transition(   -moz, $property) $duration $timing-function $delay));
         $o-value: append(     $o-value, compact(prefixed-for-transition(     -o, $property) $duration $timing-function $delay));
  }

  @if $experimental-support-for-webkit    {       -webkit-transition : $webkit-value;
    // old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it.
    @if $has-delays                       { -webkit-transition-delay : $delays;       } }
  @if $experimental-support-for-mozilla   {          -moz-transition : $moz-value;    }
  @if $experimental-support-for-opera     {            -o-transition : $o-value;      }
                                                          transition : $transitions;
}

// coerce a list to be comma delimited or make a new, empty comma delimited list.
@function comma-list($list: ()) {
  @return join((), $list, comma);
}

// Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`.
@function prefixed-for-transition($prefix, $property) {
  @if type-of($property) == list {
    $new-list: comma-list();
    @each $v in $property {
      $new-list: append($new-list, prefixed-for-transition($prefix, $v));
    }
    @return $new-list;
  } @else {
    @if index($transitionable-prefixed-values, $property) {
      @return #{$prefix}-#{$property};
    } @else {
      @return $property;
    }
  }
}

// Checks if the value given is a unit of time.
@function is-time($value) {
  @if type-of($value) == number {
    @return not not index(s ms, unit($value));
  } @else {
    @return false;
  }
}
:@has_childrenT:
@linei:@options{ :@children[o:Sass::Tree::ImportNode:@imported_file0:@imported_filename"shared;0;i;	@;
[ o:Sass::Tree::CommentNode
:
@type:silent:@value["ï/* CSS Transitions
 * Currently only works in Webkit.
 *
 * * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
 * * We'll be prepared.
 *
 * Including this submodule sets following defaults for the mixins:
 *
 *     $default-transition-property : all
 *     $default-transition-duration : 1s
 *     $default-transition-function : false
 *     $default-transition-delay    : false
 *
 * Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s). */;i;	@;
[ o:Sass::Tree::VariableNode:@guarded"!default:
@expro:Sass::Script::String	;:identifier;"all;i;	@:
@name" default-transition-property;i;	@;
[ o;;"!default;o:Sass::Script::Number:@numerator_units["s:@original"1s;i;i;	@:@denominator_units[ ;" default-transition-duration;i;	@;
[ o;;"!default;o:Sass::Script::Bool;F;i;	@;" default-transition-function;i;	@;
[ o;;"!default;o;;F;i;	@;"default-transition-delay;i;	@;
[ o;;"!default;o:Sass::Script::List	;[o;	;;;"transform;i;	@o;	;;;"transform-origin;i;	@:@separator:
comma;i;	@;"#transitionable-prefixed-values;i;	@;
[ o;
;;;["}/* One or more properties to transition
 *
 * * for multiple, use a comma-delimited list
 * * also accepts "all" or "none" */;i!;	@;
[ o:Sass::Tree::MixinDefNode;"transition-property;T;i0;	@:
@args[[o:Sass::Script::Variable:@underscored_name"property_1;"property-1;	@o;"	;#" default_transition_property;" default-transition-property;i&;	@[o;";#"property_2;"property-2;	@o;;F;i';	@[o;";#"property_3;"property-3;	@o;;F;i(;	@[o;";#"property_4;"property-4;	@o;;F;i);	@[o;";#"property_5;"property-5;	@o;;F;i*;	@[o;";#"property_6;"property-6;	@o;;F;i+;	@[o;";#"property_7;"property-7;	@o;;F;i,;	@[o;";#"property_8;"property-8;	@o;;F;i-;	@[o;";#"property_9;"property-9;	@o;;F;i.;	@[o;";#"property_10;"property-10;	@o;;F;i/;	@;
[u:Sass::Tree::IfNodeÙ[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:identifier:@value"string:
@linei1:@options{ :@operator:eq;i1:@operand1o:Sass::Script::Funcall:@keywords{ :
@name"type-of;i1;@	:
@args[o:Sass::Script::Variable	:@underscored_name"property_1;"property-1;i1;@	:@splat0;@	0[o:Sass::Tree::VariableNode:@guarded0:
@expro;;{ ;"unquote;i1;@	;[o;	;"property_1;"property-1;i1;@	;0;"property-1;i1;@	:@children[ o;;0;o:Sass::Script::Funcall:@keywords{ ;"compact;i2;	@;![o;"	;#"property_1;"property-1;i2;	@o;"	;#"property_2;"property-2;i2;	@o;"	;#"property_3;"property-3;i2;	@o;"	;#"property_4;"property-4;i2;	@o;"	;#"property_5;"property-5;i2;	@o;"	;#"property_6;"property-6;i2;	@o;"	;#"property_7;"property-7;i2;	@o;"	;#"property_8;"property-8;i2;	@o;"	;#"property_9;"property-9;i2;	@o;"	;#"property_10;"property-10;i2;	@:@splat0;"properties;i2;	@;
[ u;$Å[o:Sass::Script::Variable	:@underscored_name"$experimental_support_for_webkit:
@name"$experimental-support-for-webkit:
@linei3:@options{ 0[o:Sass::Tree::PropNode:@valueo:Sass::Script::Funcall:@keywords{ ;"prefixed-for-transition;i3;	@	:
@args[o:Sass::Script::String	:
@type:identifier;"-webkit;i3;	@	o; 	;"properties;"properties;i3;	@	:@splat0;[" -webkit-transition-property;i3:@prop_syntax:new;	@	:
@tabsi :@children[ u;$Á[o:Sass::Script::Variable	:@underscored_name"%experimental_support_for_mozilla:
@name"%experimental-support-for-mozilla:
@linei4:@options{ 0[o:Sass::Tree::PropNode:@valueo:Sass::Script::Funcall:@keywords{ ;"prefixed-for-transition;i4;	@	:
@args[o:Sass::Script::String	:
@type:identifier;"	-moz;i4;	@	o; 	;"properties;"properties;i4;	@	:@splat0;["-moz-transition-property;i4:@prop_syntax:new;	@	:
@tabsi :@children[ u;$¹[o:Sass::Script::Variable	:@underscored_name"#experimental_support_for_opera:
@name"#experimental-support-for-opera:
@linei5:@options{ 0[o:Sass::Tree::PropNode:@valueo:Sass::Script::Funcall:@keywords{ ;"prefixed-for-transition;i5;	@	:
@args[o:Sass::Script::String	:
@type:identifier;"-o;i5;	@	o; 	;"properties;"properties;i5;	@	:@splat0;["-o-transition-property;i5:@prop_syntax:new;	@	:
@tabsi :@children[ o:Sass::Tree::PropNode;o;"	;#"properties;"properties;i6;	@;["transition-property;i6:@prop_syntax:new;	@:
@tabsi ;
[ ;'0o;
;;;["¡/* One or more durations in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these durations will affect the properties in the same list position */;i9;	@;
[ o; ;"transition-duration;T;iH;	@;![[o;";#"duration_1;"duration-1;	@o;"	;#" default_transition_duration;" default-transition-duration;i>;	@[o;";#"duration_2;"duration-2;	@o;;F;i?;	@[o;";#"duration_3;"duration-3;	@o;;F;i@;	@[o;";#"duration_4;"duration-4;	@o;;F;iA;	@[o;";#"duration_5;"duration-5;	@o;;F;iB;	@[o;";#"duration_6;"duration-6;	@o;;F;iC;	@[o;";#"duration_7;"duration-7;	@o;;F;iD;	@[o;";#"duration_8;"duration-8;	@o;;F;iE;	@[o;";#"duration_9;"duration-9;	@o;;F;iF;	@[o;";#"duration_10;"duration-10;	@o;;F;iG;	@;
[u;$Ù[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:identifier:@value"string:
@lineiI:@options{ :@operator:eq;iI:@operand1o:Sass::Script::Funcall:@keywords{ :
@name"type-of;iI;@	:
@args[o:Sass::Script::Variable	:@underscored_name"duration_1;"duration-1;iI;@	:@splat0;@	0[o:Sass::Tree::VariableNode:@guarded0:
@expro;;{ ;"unquote;iI;@	;[o;	;"duration_1;"duration-1;iI;@	;0;"duration-1;iI;@	:@children[ o;;0;o;%;&{ ;"compact;iJ;	@;![o;"	;#"duration_1;"duration-1;iJ;	@o;"	;#"duration_2;"duration-2;iJ;	@o;"	;#"duration_3;"duration-3;iJ;	@o;"	;#"duration_4;"duration-4;iJ;	@o;"	;#"duration_5;"duration-5;iJ;	@o;"	;#"duration_6;"duration-6;iJ;	@o;"	;#"duration_7;"duration-7;iJ;	@o;"	;#"duration_8;"duration-8;iJ;	@o;"	;#"duration_9;"duration-9;iJ;	@o;"	;#"duration_10;"duration-10;iJ;	@;'0;"durations;iJ;	@;
[ o:Sass::Tree::MixinNode;&{ ;"experimental;iM;	@;![o;	;;;"transition-duration;iK;	@o;"	;#"durations;"durations;iK;	@o;	;;;"	-moz;iL;	@o;	;;;"-webkit;iL;	@o;	;;;"-o;iL;	@o:!Sass::Script::UnaryOperation	:@operator:not;iL;	@:@operando;	;;;"-ms;iL;	@o;-	;.;/;iL;	@;0o;	;;;"-khtml;iL;	@o;	;;;"official;iL;	@;
[ ;'0;'0o;
;;;["õ/* One or more timing functions
 *
 * * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
 * * For multiple, use a comma-delimited list
 * * These functions will effect the properties in the same list position */;iP;	@;
[ o; ;"transition-timing-function;T;i`;	@;![[o;";#"function_1;"function-1;	@o;"	;#" default_transition_function;" default-transition-function;iV;	@[o;";#"function_2;"function-2;	@o;;F;iW;	@[o;";#"function_3;"function-3;	@o;;F;iX;	@[o;";#"function_4;"function-4;	@o;;F;iY;	@[o;";#"function_5;"function-5;	@o;;F;iZ;	@[o;";#"function_6;"function-6;	@o;;F;i[;	@[o;";#"function_7;"function-7;	@o;;F;i\;	@[o;";#"function_8;"function-8;	@o;;F;i];	@[o;";#"function_9;"function-9;	@o;;F;i^;	@[o;";#"function_10;"function-10;	@o;;F;i_;	@;
[o;;0;o;%;&{ ;"unquote;ia;	@;![o;"	;#"function_1;"function-1;ia;	@;'0;"function-1;ia;	@;
[ o;;0;o;%;&{ ;"compact;ib;	@;![o;"	;#"function_1;"function-1;ib;	@o;"	;#"function_2;"function-2;ib;	@o;"	;#"function_3;"function-3;ib;	@o;"	;#"function_4;"function-4;ib;	@o;"	;#"function_5;"function-5;ib;	@o;"	;#"function_6;"function-6;ib;	@o;"	;#"function_7;"function-7;ib;	@o;"	;#"function_8;"function-8;ib;	@o;"	;#"function_9;"function-9;ib;	@o;"	;#"function_10;"function-10;ib;	@;'0;"functions;ib;	@;
[ o;,;&{ ;"experimental;ie;	@;![o;	;;;"transition-timing-function;ic;	@o;"	;#"functions;"functions;ic;	@o;	;;;"	-moz;id;	@o;	;;;"-webkit;id;	@o;	;;;"-o;id;	@o;-	;.;/;id;	@;0o;	;;;"-ms;id;	@o;-	;.;/;id;	@;0o;	;;;"-khtml;id;	@o;	;;;"official;id;	@;
[ ;'0;'0o;
;;;["¦/* One or more transition-delays in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these delays will effect the properties in the same list position */;ih;	@;
[ o; ;"transition-delay;T;iw;	@;![[o;";#"delay_1;"delay-1;	@o;"	;#"default_transition_delay;"default-transition-delay;im;	@[o;";#"delay_2;"delay-2;	@o;;F;in;	@[o;";#"delay_3;"delay-3;	@o;;F;io;	@[o;";#"delay_4;"delay-4;	@o;;F;ip;	@[o;";#"delay_5;"delay-5;	@o;;F;iq;	@[o;";#"delay_6;"delay-6;	@o;;F;ir;	@[o;";#"delay_7;"delay-7;	@o;;F;is;	@[o;";#"delay_8;"delay-8;	@o;;F;it;	@[o;";#"delay_9;"delay-9;	@o;;F;iu;	@[o;";#"delay_10;"delay-10;	@o;;F;iv;	@;
[u;$Ê[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:identifier:@value"string:
@lineix:@options{ :@operator:eq;ix:@operand1o:Sass::Script::Funcall:@keywords{ :
@name"type-of;ix;@	:
@args[o:Sass::Script::Variable	:@underscored_name"delay_1;"delay-1;ix;@	:@splat0;@	0[o:Sass::Tree::VariableNode:@guarded0:
@expro;;{ ;"unquote;ix;@	;[o;	;"delay_1;"delay-1;ix;@	;0;"delay-1;ix;@	:@children[ o;;0;o;%;&{ ;"compact;iy;	@;![o;"	;#"delay_1;"delay-1;iy;	@o;"	;#"delay_2;"delay-2;iy;	@o;"	;#"delay_3;"delay-3;iy;	@o;"	;#"delay_4;"delay-4;iy;	@o;"	;#"delay_5;"delay-5;iy;	@o;"	;#"delay_6;"delay-6;iy;	@o;"	;#"delay_7;"delay-7;iy;	@o;"	;#"delay_8;"delay-8;iy;	@o;"	;#"delay_9;"delay-9;iy;	@o;"	;#"delay_10;"delay-10;iy;	@;'0;"delays;iy;	@;
[ o;,;&{ ;"experimental;i|;	@;![o;	;;;"transition-delay;iz;	@o;"	;#"delays;"delays;iz;	@o;	;;;"	-moz;i{;	@o;	;;;"-webkit;i{;	@o;	;;;"-o;i{;	@o;-	;.;/;i{;	@;0o;	;;;"-ms;i{;	@o;-	;.;/;i{;	@;0o;	;;;"-khtml;i{;	@o;	;;;"official;i{;	@;
[ ;'0;'0o;
;;;["*/* Transition all-in-one shorthand */;i;	@;
[ o; ;"single-transition;T;i;	@;![	[o;";#"property;"property;	@o;"	;#" default_transition_property;" default-transition-property;i};	@[o;";#"duration;"duration;	@o;"	;#" default_transition_duration;" default-transition-duration;i~;	@[o;";#"function;"function;	@o;"	;#" default_transition_function;" default-transition-function;i;	@[o;";#"
delay;"
delay;	@o;"	;#"default_transition_delay;"default-transition-delay;i;	@;
[o;,;&{ ;"transition;i;	@;![o;%;&{ ;"compact;i;	@;![o;	;[	o;"	;#"property;"property;i;	@o;"	;#"duration;"duration;i;	@o;"	;#"function;"function;i;	@o;"	;#"
delay;"
delay;i;	@;:
space;i;	@;'0;
[ ;'0;'0o; ;"transition;T;i;	@;![[o;";#"transition_1;"transition-1;	@o;	;;;"default;i;	@[o;";#"transition_2;"transition-2;	@o;;F;i;	@[o;";#"transition_3;"transition-3;	@o;;F;i;	@[o;";#"transition_4;"transition-4;	@o;;F;i;	@[o;";#"transition_5;"transition-5;	@o;;F;i;	@[o;";#"transition_6;"transition-6;	@o;;F;i;	@[o;";#"transition_7;"transition-7;	@o;;F;i;	@[o;";#"transition_8;"transition-8;	@o;;F;i;	@[o;";#"transition_9;"transition-9;	@o;;F;i;	@[o;";#"transition_10;"transition-10;	@o;;F;i;	@;
[u;$÷[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:identifier:@value"default:
@linei:@options{ :@operator:eq;i:@operand1o:Sass::Script::Variable	:@underscored_name"transition_1:
@name"transition-1;i;@	;@	0[o:Sass::Tree::VariableNode:@guarded0:
@expro:Sass::Script::Funcall:@keywords{ ;"compact;i;@	:
@args[o:Sass::Script::List	;
[	o;	;" default_transition_property;" default-transition-property;i;@	o;	;" default_transition_duration;" default-transition-duration;i;@	o;	;" default_transition_function;" default-transition-function;i;@	o;	;"default_transition_delay;"default-transition-delay;i;@	:@separator:
space;i;@	:@splat0;"transition-1;i;@	:@children[ o;;0;o;;F;i;	@;"transitions;i;	@;
[ u;$[o:Sass::Script::Operation
:@operand2o; 
;o:Sass::Script::String	:
@type:identifier:@value"	list:
@linei:@options{ :@operator:eq;i:@operand1o:Sass::Script::Funcall:@keywords{ :
@name"type-of;i;@
:
@args[o;;{ ;"nth;i;@
;[o:Sass::Script::Variable	:@underscored_name"transition_1;"transition-1;i;@
o:Sass::Script::Number:@numerator_units[ :@original"1;
i;i;@
:@denominator_units[ :@splat0;0;@
;:and;i;o; 
;o;	;;	;
"	list;i;@
;;;i;o;;{ ;"type-of;i;@
;[o;	;"transition_1;"transition-1;i;@
;0;@
;@
u:Sass::Tree::IfNode¤[00[o:Sass::Tree::VariableNode:@guarded0:
@expro:Sass::Script::Funcall:@keywords{ :
@name"compact:
@linei:@options{ :
@args[o:Sass::Script::Variable	:@underscored_name"transition_1;
"transition-1;i;@o;	;"transition_2;
"transition-2;i;@o;	;"transition_3;
"transition-3;i;@o;	;"transition_4;
"transition-4;i;@o;	;"transition_5;
"transition-5;i;@o;	;"transition_6;
"transition-6;i;@o;	;"transition_7;
"transition-7;i;@o;	;"transition_8;
"transition-8;i;@o;	;"transition_9;
"transition-9;i;@o;	;"transition_10;
"transition-10;i;@:@splat0;
"transitions;i;@:@children[ [o:Sass::Tree::VariableNode:@guarded0:
@expro;;{ ;"	join;i;@
;[o;	;"transition_1;"transition-1;i;@
o;;{ ;"compact;i;@
;[o;	;"transition_2;"transition-2;i;@
o;	;"transition_3;"transition-3;i;@
o;	;"transition_4;"transition-4;i;@
o;	;"transition_5;"transition-5;i;@
o;	;"transition_6;"transition-6;i;@
o;	;"transition_7;"transition-7;i;@
o;	;"transition_8;"transition-8;i;@
o;	;"transition_9;"transition-9;i;@
o;	;"transition_10;"transition-10;i;@
;0o;	;;	;
"
comma;i;@
;0;"transitions;i;@
:@children[ o;;0;o;%;&{ ;"comma-list;i;	@;![ ;'0;"delays;i;	@;
[ o;;0;o;;F;i;	@;"has-delays;i;	@;
[ o;;0;o;%;&{ ;"comma-list;i;	@;![ ;'0;"webkit-value;i;	@;
[ o;;0;o;%;&{ ;"comma-list;i;	@;![ ;'0;"moz-value;i;	@;
[ o;;0;o;%;&{ ;"comma-list;i;	@;![ ;'0;"o-value;i;	@;
[ o;
;;;["/* This block can be made considerably simpler at the point in time that
 * we no longer need to deal with the differences in how delays are treated. */;i ;	@;
[ o:Sass::Tree::EachNode:
@listo;"	;#"transitions;"transitions;i¢;	@;T;i¢;	@:	@var"transition;
[o;
;;;["}/* Extract the values from the list
 * (this would be cleaner if nth took a 3rd argument to provide a default value). */;i£;	@;
[ o;;0;o;%;&{ ;"nth;i¥;	@;![o;"	;#"transition;"transition;i¥;	@o;;[ ;"1;i;i¥;	@;[ ;'0;"property;i¥;	@;
[ o;;0;o;;F;i¦;	@;"duration;i¦;	@;
[ o;;0;o;;F;i§;	@;"timing-function;i§;	@;
[ o;;0;o;;F;i¨;	@;"
delay;i¨;	@;
[ u;$[o:Sass::Script::Operation
:@operand2o:Sass::Script::Number:@numerator_units[ :@original"1:@valuei:
@linei©:@options{ :@denominator_units[ :@operator:gt;i©:@operand1o:Sass::Script::Funcall:@keywords{ :
@name"length;i©;@
:
@args[o:Sass::Script::Variable	:@underscored_name"transition;"transition;i©;@
:@splat0;@
0[o:Sass::Tree::VariableNode:@guarded0:
@expro;;{ ;"nth;i©;@
;[o;	;"transition;"transition;i©;@
o;;[ ;	"2;
i;i©;@
;@;0;"duration;i©;@
:@children[ u;$[o:Sass::Script::Operation
:@operand2o:Sass::Script::Number:@numerator_units[ :@original"2:@valuei:
@lineiª:@options{ :@denominator_units[ :@operator:gt;iª:@operand1o:Sass::Script::Funcall:@keywords{ :
@name"length;iª;@
:
@args[o:Sass::Script::Variable	:@underscored_name"transition;"transition;iª;@
:@splat0;@
0[o:Sass::Tree::VariableNode:@guarded0:
@expro;;{ ;"nth;iª;@
;[o;	;"transition;"transition;iª;@
o;;[ ;	"3;
i;iª;@
;@;0;"timing-function;iª;@
:@children[ u;$Y[o:Sass::Script::Operation
:@operand2o:Sass::Script::Number:@numerator_units[ :@original"3:@valuei:
@linei«:@options{ :@denominator_units[ :@operator:gt;i«:@operand1o:Sass::Script::Funcall:@keywords{ :
@name"length;i«;@
:
@args[o:Sass::Script::Variable	:@underscored_name"transition;"transition;i«;@
:@splat0;@
0[o:Sass::Tree::VariableNode:@guarded0:
@expro;;{ ;"nth;i«;@
;[o;	;"transition;"transition;i«;@
o;;[ ;	"4;
i	;i«;@
;@;0;"
delay;i«;@
:@children[ o;;0;o:Sass::Script::Bool;
T;i«;@
;"has-delays;i«;@
;[ o;
;;;[";/* If a delay is provided without a timing function */;i­;	@;
[ u;$g[o:Sass::Script::Operation
:@operand2o:!Sass::Script::UnaryOperation	:@operator:not:
@linei®:@options{ :@operando:Sass::Script::Variable	:@underscored_name"
delay:
@name"
delay;
i®;@;:and;
i®:@operand1o:Sass::Script::Funcall:@keywords{ ;"is-time;
i®;@:
@args[o;	;"timing_function;"timing-function;
i®;@:@splat0;@0[o:Sass::Tree::VariableNode:@guarded0:
@expro;	;"timing_function;"timing-function;
i®;@;"
delay;
i®;@:@children[ o;;0;o:Sass::Script::Bool:@valueF;
i®;@;"timing-function;
i®;@;[ o;;0;o;;T;
i®;@;"has-delays;
i®;@;[ o;
;;;["9/* Keep a list of delays in case one is specified */;i°;	@;
[ o;;0;o;%;&{ ;"append;i±;	@;![o;"	;#"delays;"delays;i±;	@o;%;&{ ;"if;i±;	@;![o;"	;#"
delay;"
delay;i±;	@o;"	;#"
delay;"
delay;i±;	@o;;["s;"0s;i ;i±;	@;[ ;'0;'0;"delays;i±;	@;
[ o;;0;o;%;&{ ;"append;i³;	@;![o;"	;#"webkit_value;"webkit-value;i³;	@o;%;&{ ;"compact;i³;	@;![o;	;[o;%;&{ ;"prefixed-for-transition;i³;	@;![o;	;;;"-webkit;i³;	@o;"	;#"property;"property;i³;	@;'0o;"	;#"duration;"duration;i³;	@o;"	;#"timing_function;"timing-function;i³;	@;;1;i³;	@;'0;'0;"webkit-value;i³;	@;
[ o;;0;o;%;&{ ;"append;i´;	@;![o;"	;#"moz_value;"moz-value;i´;	@o;%;&{ ;"compact;i´;	@;![o;	;[	o;%;&{ ;"prefixed-for-transition;i´;	@;![o;	;;;"	-moz;i´;	@o;"	;#"property;"property;i´;	@;'0o;"	;#"duration;"duration;i´;	@o;"	;#"timing_function;"timing-function;i´;	@o;"	;#"
delay;"
delay;i´;	@;;1;i´;	@;'0;'0;"moz-value;i´;	@;
[ o;;0;o;%;&{ ;"append;iµ;	@;![o;"	;#"o_value;"o-value;iµ;	@o;%;&{ ;"compact;iµ;	@;![o;	;[	o;%;&{ ;"prefixed-for-transition;iµ;	@;![o;	;;;"-o;iµ;	@o;"	;#"property;"property;iµ;	@;'0o;"	;#"duration;"duration;iµ;	@o;"	;#"timing_function;"timing-function;iµ;	@o;"	;#"
delay;"
delay;iµ;	@;;1;iµ;	@;'0;'0;"o-value;iµ;	@;
[ u;$Ý[o:Sass::Script::Variable	:@underscored_name"$experimental_support_for_webkit:
@name"$experimental-support-for-webkit:
@linei¸:@options{ 0[o:Sass::Tree::PropNode:@valueo; 	;"webkit_value;"webkit-value;i¸;	@	;["-webkit-transition;i¸:@prop_syntax:new;	@	:
@tabsi :@children[ o:Sass::Tree::CommentNode
:
@type:silent;["j/* old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it. */;i¹;	@	;[ u:Sass::Tree::IfNodeú[o:Sass::Script::Variable	:@underscored_name"has_delays:
@name"has-delays:
@lineiº:@options{ 0[o:Sass::Tree::PropNode:@valueo; 	;"delays;"delays;iº;	@	;["-webkit-transition-delay;iº:@prop_syntax:new;	@	:
@tabsi :@children[ u;$#[o:Sass::Script::Variable	:@underscored_name"%experimental_support_for_mozilla:
@name"%experimental-support-for-mozilla:
@linei»:@options{ 0[o:Sass::Tree::PropNode:@valueo; 	;"moz_value;"moz-value;i»;	@	;["-moz-transition;i»:@prop_syntax:new;	@	:
@tabsi :@children[ u;$[o:Sass::Script::Variable	:@underscored_name"#experimental_support_for_opera:
@name"#experimental-support-for-opera:
@linei¼:@options{ 0[o:Sass::Tree::PropNode:@valueo; 	;"o_value;"o-value;i¼;	@	;["-o-transition;i¼:@prop_syntax:new;	@	:
@tabsi :@children[ o;(;o;"	;#"transitions;"transitions;i½;	@;["transition;i½;);*;	@;+i ;
[ ;'0o;
;;;["Y/* coerce a list to be comma delimited or make a new, empty comma delimited list. */;iÀ;	@;
[ o:Sass::Tree::FunctionNode;"comma-list;T;iÁ;	@;![[o;";#"	list;"	list;	@o;	;[ ;;1;iÁ;	@;
[o:Sass::Tree::ReturnNode	;o;%;&{ ;"	join;iÂ;	@;![o;	;[ ;;1;iÂ;	@o;"	;#"	list;"	list;iÂ;	@o;	;;;"
comma;iÂ;	@;'0;iÂ;	@;
[ ;'0o;
;;;["i/* Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`. */;iÅ;	@;
[ o;5;"prefixed-for-transition;T;iÆ;	@;![[o;";#"prefix;"prefix;	@0[o;";#"property;"property;	@0;
[u;$®[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:identifier:@value"	list:
@lineiÇ:@options{ :@operator:eq;iÇ:@operand1o:Sass::Script::Funcall:@keywords{ :
@name"type-of;iÇ;@	:
@args[o:Sass::Script::Variable	:@underscored_name"property;"property;iÇ;@	:@splat0;@	u:Sass::Tree::IfNodeY[00[u:Sass::Tree::IfNode9[o:Sass::Script::Funcall:@keywords{ :
@name"
index:
@lineiÎ:@options{ :
@args[o:Sass::Script::Variable	:@underscored_name"#transitionable_prefixed_values;"#transitionable-prefixed-values;iÎ;	@	o;	;"property;"property;iÎ;	@	:@splat0u:Sass::Tree::IfNode[00[o:Sass::Tree::ReturnNode	:
@expro:Sass::Script::Variable	:@underscored_name"property:
@name"property:
@lineiÑ:@options{ ;
iÑ;@:@children[ [o:Sass::Tree::ReturnNode	:
@expro: Sass::Script::Interpolation:@whitespace_beforei:@aftero;;0;0:@originally_textF:	@mido;	;"property;"property;iÏ;	@	;iÏ:@whitespace_after0;	@	:@beforeo;;0;0;:originally_text;o:Sass::Script::String	:
@type:identifier:@value"-;iÏ;	@	;iÏ;F;	@	;0;F;o;	;"prefix;"prefix;iÏ;	@	;iÏ;0;	@	;0;iÏ;	@	:@children[ [o:Sass::Tree::VariableNode:@guarded0:
@expro;;{ ;"comma-list;iÈ;@	;[ ;0;"new-list;iÈ;@	:@children[ o:Sass::Tree::EachNode:
@listo;	;"property;"property;iÉ;@	:@has_childrenT;iÉ;@	:	@var"v;[o;;0;o;;{ ;"append;iÊ;@	;[o;	;"new_list;"new-list;iÊ;@	o;;{ ;"prefixed-for-transition;iÊ;@	;[o;	;"prefix;"prefix;iÊ;@	o;	;"v;"v;iÊ;@	;0;0;"new-list;iÊ;@	;[ o:Sass::Tree::ReturnNode	;o;	;"new_list;"new-list;iÌ;@	;iÌ;@	;[ ;'0o;
;;;["7/* Checks if the value given is a unit of time. */;iÖ;	@;
[ o;5;"is-time;T;i×;	@;![[o;";#"
value;"
value;	@0;
[u;$[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:identifier:@value"number:
@lineiØ:@options{ :@operator:eq;iØ:@operand1o:Sass::Script::Funcall:@keywords{ :
@name"type-of;iØ;@	:
@args[o:Sass::Script::Variable	:@underscored_name"
value;"
value;iØ;@	:@splat0;@	u:Sass::Tree::IfNodey[00[o:Sass::Tree::ReturnNode	:
@expro:Sass::Script::Bool:@valueF:
@lineiÛ:@options{ ;	iÛ;
@	:@children[ [o:Sass::Tree::ReturnNode	:
@expro:!Sass::Script::UnaryOperation	;:not;iÙ;@	:@operando;	;;;iÙ;@	;o;;{ ;"
index;iÙ;@	;[o:Sass::Script::List	;
[o;	;;	;
"s;iÙ;@	o;	;;	;
"ms;iÙ;@	:@separator:
space;iÙ;@	o;;{ ;"	unit;iÙ;@	;[o;	;"
value;"
value;iÙ;@	;0;0;iÙ;@	:@children[ ;'0